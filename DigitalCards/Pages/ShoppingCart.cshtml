@page
@model DigitalCards.Pages.ShoppingCartModel
@{
}

<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" integrity="sha384-B4gt1jrGC7Jh4AgTPSdUtOBvfO8sh+WyUtNU5dtPv5eU/Ap5Pi1gAK90fd5DOg" crossorigin="anonymous">
<br />
<a asp-page="/Index" class="btn btn-outline-dark">Continue Shopping</a>

<div class="container mt-5">
    <div class="row">
        <div class="col-md-8">
            <h1>Shopping Cart</h1>

            @if (Model.CartProductIds.Length == 0)
            {
                <div class="alert alert-info">
                    <p class="lead">@ViewData["Message"] <a asp-page="/Index">Shop</a></p>
                </div>
            }
            else
            {
                // Group by card ID to get unique card IDs and their quantities
                var uniqueCardQuantities = Model.CartProductIds
                .GroupBy(id => id)
                .ToDictionary(group => group.Key, group => group.Count());

                foreach (var (productId, quantity) in uniqueCardQuantities)
                {
                    // we need to get it to show Unique products (One of each + quantity)
                    var product = Model.Card.FirstOrDefault(c => c.CardID.ToString() == productId);
                    //var quantity = Model.CartProductIds.Count(c => c == productId);
                    <div class="card mb-3" style="max-width: 800px;">
                        <div class="row no-gutters">
                            <div class="col-md-4">
                                <img src="/images/@product.ImageName" alt="@product.CardName" class="card-img">
                            </div>
                            <div class="col-md-8">
                                <div class="card-body">
                                    <h5 class="card-title">@product.CardName</h5>
                                    <p class="card-text">@product.Description</p>
                                    <p class="card-text"> Quantity:@quantity </p> 
                                    <p class="card-text"><small class="text-muted">Price: $@(product.Price.ToString("F2"))</small></p>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            }
        </div>
        <div class="col-md-4">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Cart Summary</h5>
                    <p class="card-text">Total Products: @Model.CartProductIds.Length</p>
                    <p class="card-text">Total Price: $@Model.Card.Where(c => Model.CartProductIds.Contains(c.CardID.ToString())).Sum(c => c.Price).ToString("F2")</p>

                    <!-- Add tax, delivery charge, and final price -->
                    <p class="card-text">Tax (15%): $@((Model.Card.Where(c => Model.CartProductIds.Contains(c.CardID.ToString())).Sum(c => c.Price) * 0.15).ToString("F2"))</p>
                    <p class="card-text">Delivery Charge: $10.00</p>
                    <p class="card-text">Final Price: $@((Model.Card.Where(c => Model.CartProductIds.Contains(c.CardID.ToString())).Sum(c => c.Price) * 1.15 + 10).ToString("F2"))</p>

                    <!-- Checkout button -->
                    <a asp-page="/Checkout" class="btn btn-primary">Checkout</a>
                </div>
            </div>
        </div>
    </div>
</div>

          

